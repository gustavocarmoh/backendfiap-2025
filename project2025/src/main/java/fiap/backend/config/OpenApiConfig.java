package fiap.backend.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.Components;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class OpenApiConfig {

        @Bean
        public OpenAPI customOpenAPI() {
                return new OpenAPI()
                                .info(new Info()
                                                .title("NutriXpert API")
                                                .description("""
                                                                ## Sistema Completo de An√°lise Nutricional

                                                                A API NutriXpert oferece um sistema completo para:
                                                                - üîê Autentica√ß√£o e autoriza√ß√£o JWT
                                                                - üë§ Gest√£o de usu√°rios e perfis
                                                                - üìä Sistema de planos de assinatura
                                                                - ü•ó Planos nutricionais personalizados
                                                                - üí¨ Sistema de chat integrado
                                                                - üë• Rede de prestadores de servi√ßos
                                                                - üéõÔ∏è Dashboard administrativo

                                                                ### Como usar esta documenta√ß√£o:
                                                                1. **Endpoints p√∫blicos**: N√£o requerem autentica√ß√£o
                                                                2. **Endpoints protegidos**: Requerem token JWT
                                                                3. **Para testar**: Use o bot√£o "Authorize" e insira seu token
                                                                """)
                                                .version("1.0.0")
                                                .contact(new Contact()
                                                                .name("Equipe NutriXpert")
                                                                .email("dev@nutrixpert.com")
                                                                .url("https://nutrixpert.com"))
                                                .license(new License()
                                                                .name("MIT License")
                                                                .url("https://opensource.org/licenses/MIT")))
                                .servers(List.of(
                                                new Server()
                                                                .url("http://localhost:8000")
                                                                .description("Ambiente de Desenvolvimento Local"),
                                                new Server()
                                                                .url("http://localhost:8000")
                                                                .description("Ambiente de Desenvolvimento"),
                                                new Server()
                                                                .url("https://api.nutrixpert.com")
                                                                .description("Ambiente de Produ√ß√£o")))
                                .components(new Components()
                                                .addSecuritySchemes("bearerAuth", new SecurityScheme()
                                                                .type(SecurityScheme.Type.HTTP)
                                                                .scheme("bearer")
                                                                .bearerFormat("JWT")
                                                                .description("Token JWT obtido atrav√©s do endpoint POST /api/v1/auth/login. Formato: Bearer {token}")))
                                .addSecurityItem(new SecurityRequirement().addList("bearerAuth"));
                // .tags(List.of(
                // new Tag().name("Autentica√ß√£o").description(
                // "Endpoints para login, registro e gerenciamento de tokens"),
                // new Tag().name("Usu√°rios")
                // .description("Gest√£o de perfis e dados dos usu√°rios"),
                // new Tag().name("Planos de Assinatura").description(
                // "Gest√£o dos planos dispon√≠veis no sistema"),
                // new Tag().name("Assinaturas").description(
                // "Gerenciamento de assinaturas dos usu√°rios"),
                // new Tag().name("Planos Nutricionais").description(
                // "Cria√ß√£o e gest√£o de planos alimentares personalizados"),
                // new Tag().name("Chat")
                // .description("Sistema de mensagens entre usu√°rios"),
                // new Tag().name("Prestadores de Servi√ßos")
                // .description("Rede de nutricionistas e profissionais"),
                // new Tag().name("Dashboard Administrativo")
                // .description("M√©tricas e gest√£o do sistema"),
                // new Tag().name("Documenta√ß√£o").description(
                // "Endpoints de documenta√ß√£o e status da aplica√ß√£o")));
        }
}
